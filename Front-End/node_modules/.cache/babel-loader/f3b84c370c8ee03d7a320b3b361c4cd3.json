{"ast":null,"code":"var _jsxFileName = \"/home/amal/Desktop/newstuff/frontend/src/components/ImageUpload.js\";\nimport React, { Component } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { storage } from \"../firebase/index\";\n\nclass ImageUpload extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = e => {\n      if (e.target.files[0]) {\n        const image = e.target.files[0];\n        this.setState(() => ({\n          image\n        }));\n      }\n    };\n\n    this.handleUpload = () => {\n      const _this$state = this.state,\n            image = _this$state.image,\n            name = _this$state.name,\n            description = _this$state.description;\n      const uploadTask = storage.ref(\"\".concat(name, \"+\").concat(description)).put(image, name);\n      console.log(\"Upload\", image, uploadTask);\n      uploadTask.on(\"state_changed\", snapshot => {\n        // progrss function ....\n        const progress = Math.round(snapshot.bytesTransferred / snapshot.totalBytes * 100);\n        this.setState({\n          progress\n        });\n      }, error => {\n        // error function ....\n        console.log(\"ERR\");\n        console.log(error);\n      }, () => {\n        // complete function ....\n        console.log(\"Complete\");\n        storage.ref(\"images\").child(image.name).getDownloadURL().then(url => {\n          console.log(url);\n          this.setState({\n            url\n          });\n        });\n      });\n    };\n\n    this.state = {\n      image: null,\n      url: \"\",\n      progress: 0,\n      name: \"\",\n      description: \"\"\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleUpload = this.handleUpload.bind(this);\n  }\n\n  // writeUserData = ( image) => {\n  //   storage.ref(\"data\").set({\n  //     plaseName: this.props.name,\n  //     description: this.props.description,\n  //     image: image\n  //   });\n  // };\n  render() {\n    const h = this.h;\n    const _state = state,\n          name = _state.name,\n          description = _state.description;\n    const style = {\n      // height: '100vh',\n      display: \"flex\",\n      flexDirection: \"column\",\n      alignItems: \"center\",\n      justifyContent: \"center\"\n    };\n    return React.createElement(\"div\", {\n      style: style,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      class: \"font-weight-bold\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, \"Place name:\"), React.createElement(\"input\", {\n      type: \"text\",\n      value: name,\n      onChange: handleName,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      class: \"font-weight-bold\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, \"Description:\"), React.createElement(\"textarea\", {\n      cols: \"20\",\n      rows: \"5\",\n      value: description,\n      onChange: handleDescription,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"file\",\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onClick: this.handleUpload,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, \"UPLOAD\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default ImageUpload; // || 'http://via.placeholder.com/400x300'","map":{"version":3,"sources":["/home/amal/Desktop/newstuff/frontend/src/components/ImageUpload.js"],"names":["React","Component","storage","ImageUpload","constructor","props","handleChange","e","target","files","image","setState","handleUpload","state","name","description","uploadTask","ref","put","console","log","on","snapshot","progress","Math","round","bytesTransferred","totalBytes","error","child","getDownloadURL","then","url","bind","render","h","style","display","flexDirection","alignItems","justifyContent","handleName","handleDescription"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { storage } from \"../firebase/index\";\n\nclass ImageUpload extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      image: null,\n      url: \"\",\n      progress: 0,\n      name:\"\",\n      description:\"\"\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleUpload = this.handleUpload.bind(this);\n  }\n\n  handleChange = e => {\n    if (e.target.files[0]) {\n      const image = e.target.files[0];\n      this.setState(() => ({ image }));\n    }\n  };\n\n  handleUpload = () => {\n    const { image,name,description } = this.state;\n    const uploadTask = storage.ref(`${name}+${description}`).put(image,name);\n\n    console.log(\"Upload\", image, uploadTask);\n    uploadTask.on(\n      \"state_changed\",\n      snapshot => {\n        // progrss function ....\n        const progress = Math.round(\n          (snapshot.bytesTransferred / snapshot.totalBytes) * 100\n        );\n        this.setState({ progress });\n      },\n      error => {\n        // error function ....\n        console.log(\"ERR\");\n        console.log(error);\n      },\n      () => {\n        // complete function ....\n        console.log(\"Complete\");\n        storage\n          .ref(\"images\")\n          .child(image.name)\n          .getDownloadURL()\n          .then(url => {\n            console.log(url);\n            this.setState({ url });\n          });\n      }\n    );\n  };\n\n  // writeUserData = ( image) => {\n  //   storage.ref(\"data\").set({\n  //     plaseName: this.props.name,\n  //     description: this.props.description,\n  //     image: image\n  //   });\n  // };\n\n  render() {\n    const {h}=this;\n    const {name,description}=state;\n    const style = {\n      // height: '100vh',\n      display: \"flex\",\n      flexDirection: \"column\",\n      alignItems: \"center\",\n      justifyContent: \"center\"\n    };\n\n    return (\n      <div style={style}>\n        {/* <progress value={this.state.progress} max=\"100\"/> */}\n        <p class=\"font-weight-bold\">Place name:</p>\n            <input type=\"text\" value={name} onChange={handleName} />\n\n            <p class=\"font-weight-bold\">Description:</p>\n            <textarea\n              cols=\"20\"\n              rows=\"5\"\n              value={description}\n              onChange={handleDescription}\n            ></textarea>\n        <input type=\"file\" onChange={this.handleChange} />\n        <button onClick={this.handleUpload}>UPLOAD</button>\n        <br />\n        {/* <img src={this.state.url } alt=\"Uploaded images\" height=\"300\" width=\"400\"/> */}\n      </div>\n    );\n  }\n}\n\nexport default ImageUpload;\n// || 'http://via.placeholder.com/400x300'\n"]},"metadata":{},"sourceType":"module"}